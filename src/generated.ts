/* eslint-disable @typescript-eslint/no-unsafe-argument */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// Generated by @wagmi/cli@1.2.0 on 6/14/2023 at 9:33:31 AM
import {
  useContractRead,
  type UseContractReadConfig,
  useContractWrite,
  type Address,
  type UseContractWriteConfig,
  usePrepareContractWrite,
  type UsePrepareContractWriteConfig,
  useContractEvent,
  type UseContractEventConfig,
} from 'wagmi'
import {
  type ReadContractResult,
  type WriteContractMode,
  type PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// nftMarketPlace
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export const nftMarketPlaceABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  { type: 'error', inputs: [], name: 'ErrAuctionEndTimeWrong' },
  { type: 'error', inputs: [], name: 'ErrAuctionEnded' },
  { type: 'error', inputs: [], name: 'ErrHasNotAuctionEnded' },
  { type: 'error', inputs: [], name: 'ErrInvalidBid' },
  { type: 'error', inputs: [], name: 'ErrInvalidCaller' },
  { type: 'error', inputs: [], name: 'ErrItemIsAuction' },
  { type: 'error', inputs: [], name: 'ErrItemListed' },
  { type: 'error', inputs: [], name: 'ErrItemNotListed' },
  { type: 'error', inputs: [], name: 'ErrListingFee' },
  { type: 'error', inputs: [], name: 'ErrPriceNotEqual' },
  { type: 'error', inputs: [], name: 'ErrPriceZero' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: '_toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'BatchMetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: '_itemId', internalType: 'uint256', type: 'uint256' }],
    name: 'buyNftItem',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_tokenURI', internalType: 'string', type: 'string' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
      { name: '_listed', internalType: 'bool', type: 'bool' },
      { name: '_auction', internalType: 'bool', type: 'bool' },
      { name: '_auctionEndTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createNftToken',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: '_itemsId', internalType: 'uint256', type: 'uint256' }],
    name: 'endAuction',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'feeNumerator',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'fetchMarketNftItems',
    outputs: [
      {
        name: '',
        internalType: 'struct DataTypes.MarketItem[]',
        type: 'tuple[]',
        components: [
          {
            name: 'nftOwner',
            internalType: 'address payable',
            type: 'address',
          },
          { name: 'price', internalType: 'uint256', type: 'uint256' },
          { name: 'listed', internalType: 'bool', type: 'bool' },
          { name: 'auction', internalType: 'bool', type: 'bool' },
          { name: 'auctionEndTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'highestBidder',
            internalType: 'address payable',
            type: 'address',
          },
          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },
          { name: 'itemId', internalType: 'uint256', type: 'uint256' },
          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'fetchMyNfts',
    outputs: [
      {
        name: '',
        internalType: 'struct DataTypes.MarketItem[]',
        type: 'tuple[]',
        components: [
          {
            name: 'nftOwner',
            internalType: 'address payable',
            type: 'address',
          },
          { name: 'price', internalType: 'uint256', type: 'uint256' },
          { name: 'listed', internalType: 'bool', type: 'bool' },
          { name: 'auction', internalType: 'bool', type: 'bool' },
          { name: 'auctionEndTime', internalType: 'uint256', type: 'uint256' },
          {
            name: 'highestBidder',
            internalType: 'address payable',
            type: 'address',
          },
          { name: 'highestBid', internalType: 'uint256', type: 'uint256' },
          { name: 'itemId', internalType: 'uint256', type: 'uint256' },
          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getListingPriceFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'listingFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'nfts',
    outputs: [
      { name: 'nftOwner', internalType: 'address payable', type: 'address' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
      { name: 'listed', internalType: 'bool', type: 'bool' },
      { name: 'auction', internalType: 'bool', type: 'bool' },
      { name: 'auctionEndTime', internalType: 'uint256', type: 'uint256' },
      {
        name: 'highestBidder',
        internalType: 'address payable',
        type: 'address',
      },
      { name: 'highestBid', internalType: 'uint256', type: 'uint256' },
      { name: 'itemId', internalType: 'uint256', type: 'uint256' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: '_itemsId', internalType: 'uint256', type: 'uint256' }],
    name: 'placeBid',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_itemId', internalType: 'uint256', type: 'uint256' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_listed', internalType: 'bool', type: 'bool' },
      { name: '_auction', internalType: 'bool', type: 'bool' },
      { name: '_auctionEndTime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'resellNftItem',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_feeNumerator', internalType: 'uint96', type: 'uint96' }],
    name: 'setRoyaltyFee',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_listingFee', internalType: 'uint256', type: 'uint256' }],
    name: 'updateListingFee',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export const nftMarketPlaceAddress = {
  80001: '0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3',
} as const

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export const nftMarketPlaceConfig = {
  address: nftMarketPlaceAddress,
  abi: nftMarketPlaceABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"feeNumerator"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceFeeNumerator<
  TFunctionName extends 'feeNumerator',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'feeNumerator',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"fetchMarketNftItems"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceFetchMarketNftItems<
  TFunctionName extends 'fetchMarketNftItems',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'fetchMarketNftItems',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"fetchMyNfts"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceFetchMyNfts<
  TFunctionName extends 'fetchMyNfts',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'fetchMyNfts',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"getListingPriceFee"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceGetListingPriceFee<
  TFunctionName extends 'getListingPriceFee',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'getListingPriceFee',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"listingFee"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceListingFee<
  TFunctionName extends 'listingFee',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'listingFee',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"nfts"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceNfts<
  TFunctionName extends 'nfts',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'nfts',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceRoyaltyInfo<
  TFunctionName extends 'royaltyInfo',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof nftMarketPlaceABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof nftMarketPlaceABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractRead({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof nftMarketPlaceABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof nftMarketPlaceABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, TFunctionName, TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof nftMarketPlaceABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'approve', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"buyNftItem"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceBuyNftItem<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'buyNftItem'
        >['request']['abi'],
        'buyNftItem',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'buyNftItem' }
    : UseContractWriteConfig<typeof nftMarketPlaceABI, 'buyNftItem', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'buyNftItem'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'buyNftItem', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'buyNftItem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"createNftToken"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceCreateNftToken<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'createNftToken'
        >['request']['abi'],
        'createNftToken',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createNftToken'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'createNftToken',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createNftToken'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'createNftToken', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'createNftToken',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"endAuction"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceEndAuction<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'endAuction'
        >['request']['abi'],
        'endAuction',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'endAuction' }
    : UseContractWriteConfig<typeof nftMarketPlaceABI, 'endAuction', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'endAuction'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'endAuction', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'endAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"placeBid"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlacePlaceBid<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'placeBid'
        >['request']['abi'],
        'placeBid',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'placeBid' }
    : UseContractWriteConfig<typeof nftMarketPlaceABI, 'placeBid', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'placeBid'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'placeBid', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'placeBid',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'renounceOwnership', TMode>(
    {
      abi: nftMarketPlaceABI,
      address: nftMarketPlaceAddress[80001],
      functionName: 'renounceOwnership',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"resellNftItem"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceResellNftItem<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'resellNftItem'
        >['request']['abi'],
        'resellNftItem',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'resellNftItem'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'resellNftItem',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'resellNftItem'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'resellNftItem', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'resellNftItem',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'safeTransferFrom',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'safeTransferFrom', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'setApprovalForAll',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'setApprovalForAll', TMode>(
    {
      abi: nftMarketPlaceABI,
      address: nftMarketPlaceAddress[80001],
      functionName: 'setApprovalForAll',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"setRoyaltyFee"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceSetRoyaltyFee<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'setRoyaltyFee'
        >['request']['abi'],
        'setRoyaltyFee',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setRoyaltyFee'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'setRoyaltyFee',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRoyaltyFee'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'setRoyaltyFee', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'setRoyaltyFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'transferFrom',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'transferFrom', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'transferOwnership', TMode>(
    {
      abi: nftMarketPlaceABI,
      address: nftMarketPlaceAddress[80001],
      functionName: 'transferOwnership',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"updateListingFee"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceUpdateListingFee<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nftMarketPlaceAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nftMarketPlaceABI,
          'updateListingFee'
        >['request']['abi'],
        'updateListingFee',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'updateListingFee'
      }
    : UseContractWriteConfig<
        typeof nftMarketPlaceABI,
        'updateListingFee',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'updateListingFee'
      } = {} as any,
) {
  return useContractWrite<typeof nftMarketPlaceABI, 'updateListingFee', TMode>({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'updateListingFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"buyNftItem"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceBuyNftItem(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'buyNftItem'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'buyNftItem',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'buyNftItem'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"createNftToken"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceCreateNftToken(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'createNftToken'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'createNftToken',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nftMarketPlaceABI,
    'createNftToken'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"endAuction"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceEndAuction(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'endAuction'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'endAuction',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'endAuction'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"placeBid"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlacePlaceBid(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'placeBid'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'placeBid',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'placeBid'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nftMarketPlaceABI,
      'renounceOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nftMarketPlaceABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"resellNftItem"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceResellNftItem(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'resellNftItem'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'resellNftItem',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'resellNftItem'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nftMarketPlaceABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nftMarketPlaceABI,
      'setApprovalForAll'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nftMarketPlaceABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"setRoyaltyFee"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceSetRoyaltyFee(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'setRoyaltyFee'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'setRoyaltyFee',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'setRoyaltyFee'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nftMarketPlaceABI,
      'transferOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nftMarketPlaceABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `functionName` set to `"updateListingFee"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function usePrepareNftMarketPlaceUpdateListingFee(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nftMarketPlaceABI, 'updateListingFee'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    functionName: 'updateListingFee',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof nftMarketPlaceABI,
    'updateListingFee'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `eventName` set to `"BatchMetadataUpdate"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceBatchMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, 'BatchMetadataUpdate'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    eventName: 'BatchMetadataUpdate',
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, 'BatchMetadataUpdate'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `eventName` set to `"MetadataUpdate"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, 'MetadataUpdate'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    eventName: 'MetadataUpdate',
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, 'MetadataUpdate'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nftMarketPlaceABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x88c301AEF5EB979F30a781b2Cb13019218AbA7C3)
 */
export function useNftMarketPlaceTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof nftMarketPlaceABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nftMarketPlaceAddress } = {} as any,
) {
  return useContractEvent({
    abi: nftMarketPlaceABI,
    address: nftMarketPlaceAddress[80001],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof nftMarketPlaceABI, 'Transfer'>)
}
